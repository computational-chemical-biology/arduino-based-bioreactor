import serial
import time
from datetime import datetime

def send_command(command ):
    ser.write(command.encode('utf-8')+b'\n')
    time.sleep(1)

def change_parameters():
    user_input = input("Do you want to change parameters? (y/n): ").lower()
    
    if user_input == 'y':
        
        interval_value = get_valid_input("Enter new value in days for 'interval between cycles' (only numbers): ")
        pump_interval = get_valid_input("Enter new value in seconds for 'interval between pump 1 and 2 activation' (only numbers): ")
        pump1_value = get_valid_input("Enter new value in seconds for 'duration of pump 1 activation' (only numbers): ")
        pump2_value = get_valid_input("Enter new value in seconds for 'duration of pump 2 activation' (only numbers): ")
               
        interval_value_ms = interval_value*86400000 #converts days to milisseconds
        pump_interval_ms = pump_interval*1000 #converts seconds to milisseconds
        pump1_value_ms = pump1_value*1000 #converts seconds to milisseconds
        pump2_value_ms = pump2_value*1000 #converts seconds to milisseconds
        
        send_command(f"I{interval_value_ms}")
        send_command(f"P1{pump1_value_ms}")
        send_command(f"P2{pump2_value_ms}")
        send_command(f"Pi{pump_interval_ms}")

def get_valid_input (prompt):
    while True:
        try:
            u_input = int(input(prompt))
            return u_input   
        except ValueError:
            print('Invalid value, please try again')

if __name__ == '__main__':
    
    possible_ports = ['/dev/ttyACM1','/dev/ttyACM0', '/dev/ttyUSB0', '/dev/ttyUSB1']
    baud_rate = 9600
    
    ser = None
    for port in possible_ports:
        try:
            ser = serial.Serial(port, baud_rate)
            break
        except serial.Serial.Exception:
            pass
    if ser is None:
        print("Failed to open any serial port.")
        exit()
        

    ser.reset_input_buffer()
    change_parameters()
    
    while True:
        
        line = ser.readline().decode('utf-8').rstrip()
        if line:
            timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            print(f"[{timestamp}] {line}")
            time.sleep(1)
